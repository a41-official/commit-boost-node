version: "1.0"

services:
  #             _   _
  #   __ _  ___| |_| |__
  #  / _` |/ _ \ __| '_ \
  # | (_| |  __/ |_| | | |
  #  \__, |\___|\__|_| |_|
  #  |___/
  execution-client:
    image: ethereum/client-go:${GETH_VERSION:-v1.13.13}
    ports:
      - ${EC_PORT_P2P:-30313}:30313/tcp # P2P TCP
      - ${EC_PORT_P2P:-30313}:30313/udp # P2P UDP
      - ${EC_PORT_HTTP:-8555}:8555 # JSON-RPC
      - ${EC_PORT_WS:-8556}:8556 # WS-RPC
      - ${EC_PORT_ENGINE:-8561}:8561 # ENGINE-API
      - ${EC_PORT_METRIC:-6070}:6070 # METRICS
    command: |
      --datadir=/data/geth/execution-data
      --networkid=${EC_NETWORK_ID:-7014190335}
      --nat=${EC_NAT:-}
      --port=30313
      --syncmode=full
      --state.scheme=hash
      --bootnodes=${EC_BOOTNODES:-enode://c15b5973b8fc6e5152d1d442512e5024b25883f2e002564cfa29cc3b748d687756c9f674f021f142eeea5711697a3d43d2bc36f13b1e20fe11b341676921430e@18.192.40.76:30303?discport=30303,enode://35cd13c4d555d70b39aafa806f817c4707397f7f9b7a1d43237f73d279c318fda0e4ba8a4b10d1f8b7771992804209aa028f74bd846afc86d016c4728a1c5268@35.156.177.215:30303?discport=30303,enode://dba7a24e543cc924178ed7e0066e5e40caa17607474a25b50e4bea7b565dee9719970a33e3e5beb4ad84832dad91bd9fe8de1f6cb1c6a7cb6e90c3bc10a20c67@18.199.185.236:30303?discport=30303,enode://a3317a4ec26ad3cedddb1951105699757fc74ed35c7bc6e31a6fe08b383fad3540ccf7c2f6d617411c74a22cf81a8a3898cf845c7a1501a969229c6ee046042f@52.28.153.174:30303?discport=30303}
      --verbosity=3
      --http
      --http.addr=0.0.0.0
      --http.port=8555
      --http.vhosts="*"
      --http.corsdomain="*"
      --http.api="admin,engine,net,eth,web3,debug"
      --ws
      --ws.addr=0.0.0.0
      --ws.port=8556
      --ws.origins="*"
      --ws.api="admin,engine,net,eth,web3,debug"
      --authrpc.jwtsecret="/jwt/jwtsecret"
      --authrpc.addr=0.0.0.0
      --authrpc.port=8561
      --authrpc.vhosts="*"
      --metrics
      --metrics.addr=0.0.0.0
      --metrics.port=6070
    networks: [ ethnode ]
    volumes:
      - ./data/geth:/data/geth/execution-data
      - ./jwt:/jwt
    restart: unless-stopped

  #  _ _       _     _   _
  # | (_) __ _| |__ | |_| |__   ___  _   _ ___  ___
  # | | |/ _` | '_ \| __| '_ \ / _ \| | | / __|/ _ \
  # | | | (_| | | | | |_| | | | (_) | |_| \__ \  __/
  # |_|_|\__, |_| |_|\__|_| |_|\___/ \__,_|___/\___|
  #      |___/
  consensus-client:
    image: sigp/lighthouse:${LIGHTHOUSE_VERSION:-v5.2.0}
    ports:
      - ${CC_PORT_P2P:-50050}:50050/tcp # P2P TCP
      - ${CC_PORT_P2P:-50050}:50050/udp # P2P UDP
      - ${CC_PORT_HTTP:-4000}:4000 # HTTP API
      - ${CC_PORT_METRICS:-5054}:5054 # Metrics
    command: |
      lighthouse beacon_node
      --datadir=/data/lighthouse/beacon-data
      --testnet-dir=/network-configs
      --listen-address=0.0.0.0
      --port=50050
      --enr-address=${CC_ENR_ADDRESS:-}
      --enr-tcp-port=50050
      --enr-udp-port=50050
      --disable-enr-auto-update
      --disable-packet-filter
      --enable-private-discovery
      --subscribe-all-subnets
      --always-prepare-payload
      --prepare-payload-lookahead=12000
      --slots-per-restore-point=32
      --boot-nodes=${CC_BOOTNODES:-enr:-Iq4QK3EWjpB_Wh4Nh9qDWsIlkwCo-ltVJIOZintRmXlq4BqSO3MgChdjo5bNSc_dBVcnhM_CZidGE-CMjazCeJhn7OGAZA6aA31gmlkgnY0gmlwhDQ6SFGJc2VjcDI1NmsxoQN4MIj6Xe7PBxpfvrpyDe2OkrcIq0gdj38hHXpWjB6Zl4N1ZHCCIyk,enr:-LK4QJIhICEs-MIlzVGEOJRco5B3eR1HjsoPrnlNdCifHlT_NQCaY51Z-ntBIgUQmNRcEBqBogOhh43BYdMR_d9Z-DgKh2F0dG5ldHOIAAYAAAAAAACEZXRoMpBLd1oGYBMnNj9CDwAAAAAAgmlkgnY0gmlwhDQ6SFGJc2VjcDI1NmsxoQOy0WhSLuSWpKXex_SG9dn4bOk-LURo7ZjaUuQ1Fbdbk4N0Y3CCIyiDdWRwgiMo,enr:-MS4QKp7W7f8BsoB04SovlJFZDhs67ZgFK_h5TwBXItLoJfGMPDCLnReASmmig_7kxCNf08e68FrCVM3FcPV0ttR92sWh2F0dG5ldHOIAAAwAAAAAACEZXRoMpBLd1oGYBMnNj9CDwAAAAAAgmlkgnY0gmlwhBLAKEyEcXVpY4IjKYlzZWNwMjU2azGhAxUCn447F0j2DEeA-PqFdp5GP3VpXRWgia2yKjeT62G2iHN5bmNuZXRzAIN0Y3CCIyiDdWRwgiMo,enr:-MS4QAvcfEmj00GqJcvkjcvQIhBi6pJQ9Znnp2Hr_Hh4YEOzWMENkleVt-vGAAgz8bhFedR5JkcfuzHTzY-9EpB43n4Ph2F0dG5ldHOIAAAAAAAAAMCEZXRoMpBLd1oGYBMnNj9CDwAAAAAAgmlkgnY0gmlwhCOcsdeEcXVpY4IjKYlzZWNwMjU2azGhAo8AZqqrsuBrbMLHdavhLdAxLWpcSk-SPDuqjJt5Fe_oiHN5bmNuZXRzD4N0Y3CCIyiDdWRwgiMo,enr:-MS4QDvmIhX8vI8_kK62XXbO9gnrm-YuzXKo-OS07uRKLgijLfxeUPvtKU-Ps2RnxOEoNq9RPqhbeVdAVYO71eAJvRkPh2F0dG5ldHOIAAAAAAAAABiEZXRoMpBLd1oGYBMnNj9CDwAAAAAAgmlkgnY0gmlwhBLHueyEcXVpY4IjKYlzZWNwMjU2azGhA4ZmLIctckMGhbOwtpgUI2RNeH2S7LXmwpX_onBAfW_AiHN5bmNuZXRzD4N0Y3CCIyiDdWRwgiMo,enr:-MS4QGcM6eqjhCp_Ag7gMzkU8ks7F-S2QsoIdeEsbcB8TPefYK19ymkwmTcpmZfbTJRMwwAvqdOMmGWEAI5GYv_7xZwTh2F0dG5ldHOIAAAAAAAMAACEZXRoMpBLd1oGYBMnNj9CDwAAAAAAgmlkgnY0gmlwhDQcma6EcXVpY4IjKYlzZWNwMjU2azGhAnXOGXUDHbcgGJeZ9-ftr8cihtkyfUfNlpQNe9G8P2PCiHN5bmNuZXRzD4N0Y3CCIyiDdWRwgiMo}      
      --checkpoint-sync-url=${CC_CHECKPOINT_SYNC_URL:-https://bn.bootnode.helder-devnets.xyz/}
      --execution-endpoint=${CC_EXECUTION_ENDPOINT:-http://execution-client:8561}
      --jwt-secrets=/jwt/jwtsecret
      --suggested-fee-recipient=${CC_SUGGESTED_FEE_RECIPIENT:-0x0000000000000000000000000000000000000000}
      --debug-level=info
      --http
      --http-address=0.0.0.0
      --http-port=4000
      --http-allow-sync-stalled
      --metrics
      --metrics-address=0.0.0.0
      --metrics-port=5054
      --metrics-allow-origin="*"
    networks: [ ethnode ]
    volumes:
      - ./data/lighthouse:/data/lighthouse/beacon-data
      - ./network-configs:/network-configs
      - ./jwt:/jwt
    restart: unless-stopped
  
  validator-client:
    image: sigp/lighthouse:${LIGHTHOUSE_VERSION:-v5.2.0}
    ports:
      - ${VC_PORT_HTTP:-5062}:5062 # Keymanager API
      - ${VC_PORT_METRICS:-5064}:5064 # Metrics
    entrypoint: /opt/lighthouse/run.sh
    environment:
      VC_BEACON_NODE_ADDRESS: ${VC_BEACON_NODE_ADDRESS:-http://consensus-client:4000}
      VC_SUGGESTED_FEE_RECIPIENT: ${VC_SUGGESTED_FEE_RECIPIENT:-0x0000000000000000000000000000000000000000}
      VC_DEFAULT_GRAFFITI: ${VC_DEFAULT_GRAFFITI:-Lighthouse}
    networks: [ ethnode ]
    volumes:
      - ./scripts/lighthouse/run.sh:/opt/lighthouse/run.sh
      - ./.key/validator_keys:/opt/lighthouse/keys
      - ./network-configs:/network-configs
    restart: unless-stopped

networks:
  ethnode: